services:
  openresty-gateway:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: openresty-gateway
    volumes:
      - ./openresty/conf:/usr/local/openresty/nginx/conf
      - ./openresty/lua/verify_jwt.lua:/usr/local/openresty/lualib/verify_jwt.lua
      #- ./openresty/lua/lua-resty-core/lib/resty/core:/usr/local/openresty/lualib/resty/core
      #- ./openresty/lua/lua-resty-lrucache/lib/resty/lrucache.lua:/usr/local/openresty/lualib/resty/lrucache.lua
      - ./openresty/certs:/etc/nginx/certs
    ports:
      - "443:443"
    depends_on:
      - api-gateway

  api-gateway:
    image: node:16-alpine
    container_name: api-gateway
    working_dir: /app
    volumes:
      - ./api-gateway:/app
      - ./logs/api-gateway:/app/logs # Logs persistentes do gateway
    command: ["npm", "start"]
    restart: always
    expose:
      - "3000"
    depends_on:
      - auth-service
      - policy-service
      - resource-service
    environment:
      - NODE_ENV=production
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M

  auth-service:
    image: node:16-alpine
    container_name: auth-service
    working_dir: /app
    volumes:
      - ./auth-service:/app
      - ./logs/auth-service:/app/logs # Logs persistentes da autenticação
    command: ["npm", "start"]
    restart: always
    expose:
      - "3001"
    ports:
      - "4000:3001"
    depends_on:
      - mongodb
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://university_user:securepass123@mongodb:27017/ztadb?authSource=ztadb
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M

  policy-service:
    image: node:16-alpine
    container_name: policy-service
    working_dir: /app
    volumes:
      - ./policy-service:/app
      - ./logs/policy-service:/app/logs # Logs persistentes do policy
    command: ["npm", "start"]
    restart: always
    ports:
      - "3002:3002"
    expose:
      - "3002"
    depends_on:
      - mongodb
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://university_user:securepass123@mongodb:27017/ztadb?authSource=ztadb
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M
    networks:
      default:
        ipv4_address: 172.18.0.10

  resource-service:
    image: node:18-alpine
    container_name: resource-service
    working_dir: /app
    volumes:
      - ./resource-service:/app
      - ./logs/resource-service:/app/logs
      - ./uploads/resource-service:/app/uploads
    command: ["node", "app.js"]
    restart: always
    ports:
      - "3003:3003"
    depends_on:
      - mongodb
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://university_user:securepass123@mongodb:27017/ztadb?authSource=ztadb
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M

  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - ./mongo-data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
    environment:
      - MONGO_INITDB_ROOT_USERNAME=adminroot
      - MONGO_INITDB_ROOT_PASSWORD=mypassword
      - MONGO_INITDB_DATABASE=ztadb

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

networks:
  default:
    name: zta-network
    driver: bridge
    ipam:
      config:
        - subnet: 172.18.0.0/16

volumes:
  mongo-data:
  mongo-config:
